@charset "UTF-8";
// 定位的混合宏(mixin);

//////////////////////////////////////////////////////////////////////////
// 定位:                                       							//             
//  例子 : @include position(absolute,(t:10px,l:0px,z:5));   //
//////////////////////////////////////////////////////////////////////////
@mixin position( $position,$args:false ){
	position: $position;
	@include position_each( $args );
}

//////////////////////////////////////////////////////////////////////////
// 绝对定位:                                   							//             
//  例子 : @include abs((t:10px,l:0px,z:5));                 //
//////////////////////////////////////////////////////////////////////////
@mixin abs($args:false){
	position: absolute;
	@include position_each( $args );
}

//////////////////////////////////////////////////////////////////////////
// 相对定位:                                   							//             
//  例子 : @include rel((t:10px,l:0px,z:5));                 //
//////////////////////////////////////////////////////////////////////////
@mixin rel($args:false){
	position: relative;
	@include position_each( $args );
}

//////////////////////////////////////////////////////////////////////////
// 固定定位:                                   							//             
//  例子 : @include fixed((t:10px,l:0px,z:5));               //
//////////////////////////////////////////////////////////////////////////
@mixin fixed($args:false){
	position: fixed;
	@if( compatibility() ){
		_position: absolute; *zoom: 1; 
	}
	@include position_each( $args );
}

//遍历定位属性:top\right\bottom\left\z-index\width\height;
@mixin position_each( $args ){
	$parameter  :t,r,b,l,z,w,h;
	$parameter2 :(t:top,r:right,b:bottom,l:left,z:z-index,w:width,h:height);
	@each $o, $s in $args {
	  $i: index($parameter, $o);
		@if( $i and type-of( $i ) == number ){
		  	@if( $i == 5 ){
				 #{map-get($parameter2,$o)} : $s;	
		  	}@else{
		  		#{map-get($parameter2,$o)} : addUnits($s);	
		  	}
	    }	
	}
}

//定位top值;
@mixin t($top:0){
	top:addUnits($top);
}

//定位left值;
@mixin l($left:0){
	left:addUnits($left);
}

//定位bottom值;
@mixin b($bottom:0){
	bottom:addUnits($bottom);
}

//定位right值;
@mixin r($right:0){
	right:addUnits($right);
}

//定位top/left值;
@mixin tl($top:0,$left:0,$zindex:false){
	@include t($top);
	@include l($top);
	@if( $zindex ){
		@include z($zindex);
	}	
}

//定位right/left值;
@mixin rl($right:0,$left:0,$zindex:false){
	@include r($right);
	@include l($left);
	@if( $zindex ){
		@include z($zindex);
	}	
}

//定位bottom/left值;
@mixin bl($bottom:0,$left:0,$zindex:false){
	@include b($bottom);
	@include l($left);	
	@if( $zindex ){
		@include z($zindex);
	}
}

//定位bottom/right值;
@mixin br($bottom:0,$right:0,$zindex:false){
	@include b($bottom);
	@include r($right);	
	@if( $zindex ){
		@include z($zindex);
	}
}

//定位top/left/bottom/right值;
@mixin trbl($top:0,$left:0,$bottom:0,$right:0,$zindex:false){
	@include t($top);
	@include l($left);
	@include b($bottom);
	@include r($right);
	@if( $zindex ){
		@include z($zindex);
	}
}

//层级为10;
@mixin z1{
  @include z(10);
}

//层级为20;
@mixin z2{
  @include z(20);
}

//层级为30;
@mixin z3{
  @include z(30);
}

//层级为40;
@mixin z4{
   @include z(40);
}

//层级为50;
@mixin z5{
 @include z(50);
}

//层级为60;
@mixin z6{
  @include z(60);
}

//最高层级;
@mixin z-max{
	@include z(9999);
}

//设置层级数;
@mixin z( $num ){
  z-index:$num;
}

